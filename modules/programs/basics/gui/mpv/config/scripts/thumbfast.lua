-- thumbfast.lua
--
-- High-performance on-the-fly thumbnailer
--
-- Built for easy integration in third-party UIs.

--[[
This Source Code Form is subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this
file, You can obtain one at https://mozilla.org/MPL/2.0/.
]]

-- !! Minified !!
local a={socket="",thumbnail="",max_height=200,max_width=200,tone_mapping="auto",overlay_id=42,spawn_first=false,quit_after_inactivity=0,network=false,audio=false,hwdec=false,direct_io=false,mpv_path="mpv"}mp.utils=require"mp.utils"mp.options=require"mp.options"mp.options.read_options(a,"thumbfast")local b={}local c=mp.command_native_async==nil;local d=true;function subprocess(e,f,g)g=g or function()end;if not c then if f then return mp.command_native_async({name="subprocess",playback_only=true,args=e},g)else return mp.command_native({name="subprocess",playback_only=false,capture_stdout=true,args=e})end else if f then return mp.utils.subprocess_detached({args=e},g)else return mp.utils.subprocess({args=e})end end end;local h={}if a.direct_io then local i,j=pcall(require,"ffi")if i then h={ffi=j,C=j.C,bit=require("bit"),socket_wc="",CP_UTF8=65001,GENERIC_WRITE=0x40000000,OPEN_EXISTING=3,FILE_FLAG_WRITE_THROUGH=0x80000000,FILE_FLAG_NO_BUFFERING=0x20000000,PIPE_NOWAIT=j.new("unsigned long[1]",0x00000001),INVALID_HANDLE_VALUE=j.cast("void*",-1),_lpNumberOfBytesWritten=j.new("unsigned long[1]")}h._createfile_pipe_flags=h.bit.bor(h.FILE_FLAG_WRITE_THROUGH,h.FILE_FLAG_NO_BUFFERING)j.cdef[[
            void* __stdcall CreateFileW(const wchar_t *lpFileName, unsigned long dwDesiredAccess, unsigned long dwShareMode, void *lpSecurityAttributes, unsigned long dwCreationDisposition, unsigned long dwFlagsAndAttributes, void *hTemplateFile);
            bool __stdcall WriteFile(void *hFile, const void *lpBuffer, unsigned long nNumberOfBytesToWrite, unsigned long *lpNumberOfBytesWritten, void *lpOverlapped);
            bool __stdcall CloseHandle(void *hObject);
            bool __stdcall SetNamedPipeHandleState(void *hNamedPipe, unsigned long *lpMode, unsigned long *lpMaxCollectionCount, unsigned long *lpCollectDataTimeout);
            int __stdcall MultiByteToWideChar(unsigned int CodePage, unsigned long dwFlags, const char *lpMultiByteStr, int cbMultiByte, wchar_t *lpWideCharStr, int cchWideChar);
        ]]h.MultiByteToWideChar=function(k)if k then local l=h.C.MultiByteToWideChar(h.CP_UTF8,0,k,-1,nil,0)if l>0 then local m=h.ffi.new("wchar_t[?]",l)if h.C.MultiByteToWideChar(h.CP_UTF8,0,k,-1,m,l)>0 then return m end end end;return""end else a.direct_io=false end end;local n=nil;local o=0;local p=false;local q=false;local r=false;local s=false;local t=false;local u=false;local v=false;local w=nil;local x=nil;local y=w;local z=x;local A=nil;local B=a.max_width;local C=a.max_height;local D=nil;local E=nil;local F=nil;local G=nil;local H=nil;local I=false;local J={["lavfi-crop"]=true,["crop"]=true}local K={["hflip"]=true,["vflip"]=true}local L={["hflip"]=true,["vflip"]=true,["lavfi-crop"]=true,["crop"]=true}local M={["none"]=true,["clip"]=true,["linear"]=true,["gamma"]=true,["reinhard"]=true,["hable"]=true,["mobius"]=true}local N=nil;local O=""local P=""local Q=0;local R=""local S=""local T=0;local U=0;local V=nil;local W=1/60;local X=true;local Y=[=[
#!/usr/bin/env bash
MPV_IPC_FD=0; MPV_IPC_PATH="%s"
trap "kill 0" EXIT
while [[ $# -ne 0 ]]; do case $1 in --mpv-ipc-fd=*) MPV_IPC_FD=${1/--mpv-ipc-fd=/} ;; esac; shift; done
if echo "print-text thumbfast" >&"$MPV_IPC_FD"; then echo -n > "$MPV_IPC_PATH"; tail -f "$MPV_IPC_PATH" >&"$MPV_IPC_FD" & while read -r -u "$MPV_IPC_FD" 2>/dev/null; do :; done; fi
]=]local function Z()local _=""if jit and jit.os and jit.arch then _=jit.os else if package.config:sub(1,1)=="\\"then local a0=os.getenv("OS")if a0 then _=a0 end else _=subprocess({"uname","-s"}).stdout end end;_=_:lower()local a1={["windows"]="windows",["linux"]="linux",["osx"]="darwin",["mac"]="darwin",["darwin"]="darwin",["^mingw"]="windows",["^cygwin"]="windows",["bsd$"]="darwin",["sunos"]="darwin"}local a2="linux"for a3,a4 in pairs(a1)do if _:match(a3)then a2=a4;break end end;return a2 end;local a5=mp.get_property("platform")or Z()local a6=a5=="windows"and"\\"or"/"if a.socket==""then if a5=="windows"then a.socket="thumbfast"else a.socket="/tmp/thumbfast"end end;if a.thumbnail==""then if a5=="windows"then a.thumbnail=os.getenv("TEMP").."\\thumbfast.out"else a.thumbnail="/tmp/thumbfast.out"end end;local a7=mp.utils.getpid()a.socket=a.socket..a7;a.thumbnail=a.thumbnail..a7;if a.direct_io then if a5=="windows"then h.socket_wc=h.MultiByteToWideChar("\\\\.\\pipe\\"..a.socket)end;if h.socket_wc==""then a.direct_io=false end end;local a8=a.mpv_path;if a8=="mpv"and a5=="darwin"and a7 then a8=string.gsub(subprocess({"ps","-o","comm=","-p",tostring(a7)}).stdout,"[\n\r]","")if a8~="mpv"then a8=string.gsub(a8,"/mpv%-bundle$","/mpv")local a9=mp.utils.file_info("/usr/local/mpv")if a9 and a9.is_file then a8="/usr/local/mpv"else local aa=mp.utils.file_info("/Applications/mpv.app/Contents/MacOS/mpv")if aa and aa.is_file then mp.msg.warn("symlink mpv to fix Dock icons: `sudo ln -s /Applications/mpv.app/Contents/MacOS/mpv /usr/local/mpv`")else mp.msg.warn("drag to your Applications folder and symlink mpv to fix Dock icons: `sudo ln -s /Applications/mpv.app/Contents/MacOS/mpv /usr/local/mpv`")end end end end;local function ab()local ac=mp.get_property_native("vo-passes")if ac and ac["fresh"]then for ad,ae in pairs(ac["fresh"])do for af,ag in pairs(ae)do if af=="desc"and ag then local ah=string.match(ag,"([0-9a-z.-]+) tone map")if ah then return ah end end end end end end;local function ai(aj,ak)local al=""local am=b["vf"]if am and#am>0 then for an=#am,1,-1 do if aj[am[an].name]then local e=""for ao,ap in pairs(am[an].params)do if e~=""then e=e..":"end;e=e..ao.."="..ap end;al=al..am[an].name.."="..e..","end end end;if ak and a.tone_mapping~="no"or a.tone_mapping=="auto"then if b["video-params"]and b["video-params"]["primaries"]=="bt.2020"then local ah=a.tone_mapping;if ah=="auto"then ah=N or b["tone-mapping"]if ah=="auto"and b["current-vo"]=="gpu-next"then ah=ab()end end;if not M[ah]then ah="hable"end;N=ah;al=al.."zscale=transfer=linear,format=gbrpf32le,tonemap="..ah..",zscale=transfer=bt709,"end end;if ak then al=al.."scale=w="..B..":h="..C..R..",pad=w="..B..":h="..C..":x=-1:y=-1,format=bgra"end;return al end;local function aq()local ar=b["video-out-params"]and b["video-out-params"]["dw"]local as=b["video-out-params"]and b["video-out-params"]["dh"]if not ar or not as then return end;local at=b["display-hidpi-scale"]or 1;if ar/as>a.max_width/a.max_height then B=math.floor(a.max_width*at+0.5)C=math.floor(as/ar*B+0.5)else C=math.floor(a.max_height*at+0.5)B=math.floor(ar/as*C+0.5)end;local au=b["video-out-params"]and b["video-out-params"]["par"]or 1;if au==1 then R=":force_original_aspect_ratio=decrease"else R=""end end;local av=nil;local function aw(ax,ay)local az=b["video-params"]and b["video-params"]["rotate"]local aA=b["current-tracks/video"]and b["current-tracks/video"]["image"]local aB=aA and b["current-tracks/video"]["albumart"]q=(ax or 0)==0 or(ay or 0)==0 or U==0 or b["demuxer-via-network"]and not a.network or aB and not a.audio or aA and not aB or r;if av then av:kill()av=nil elseif U==0 or az==nil and not q then av=mp.add_timeout(0.05,function()aw(ax,ay)end)end;local aC,aD=mp.utils.format_json({width=ax,height=ay,disabled=q,available=true,socket=a.socket,thumbnail=a.thumbnail,overlay_id=a.overlay_id})if c then mp.command_native({"script-message","thumbfast-info",aC})else mp.command_native_async({"script-message","thumbfast-info",aC},function()end)end end;local function aE()if n then n:close()n=nil;o=0 end;os.remove(a.thumbnail)os.remove(a.thumbnail..".bgra")end;local aF;local function aG(aH)if q then return end;local aI=b["path"]if aI==nil then return end;if a.quit_after_inactivity>0 then if I or aF:is_enabled()then aF:kill()end;aF:resume()end;local aJ=b["stream-open-filename"]local aK=aJ and b["demuxer-via-network"]and aI~=aJ;if aK then aI=aJ end;aE()local aL=b["vid"]U=aL or 0;local e={a8,"--no-config","--msg-level=all=no","--idle","--pause","--keep-open=always","--really-quiet","--no-terminal","--load-scripts=no","--osc=no","--ytdl=no","--load-stats-overlay=no","--load-osd-console=no","--load-auto-profiles=no","--edition="..(b["edition"]or"auto"),"--vid="..(aL or"auto"),"--no-sub","--no-audio","--start="..aH,X and"--hr-seek=no"or"--hr-seek=yes","--ytdl-format=worst","--demuxer-readahead-secs=0","--demuxer-max-bytes=128KiB","--vd-lavc-skiploopfilter=all","--vd-lavc-software-fallback=1","--vd-lavc-fast","--vd-lavc-threads=2","--hwdec="..(a.hwdec and"auto"or"no"),"--vf="..ai(L,true),"--sws-scaler=fast-bilinear","--video-rotate="..Q,"--ovc=rawvideo","--of=image2","--ofopts=update=1","--o="..a.thumbnail}if not c then table.insert(e,"--sws-allow-zimg=no")end;if a5=="darwin"and b["macos-app-activation-policy"]then table.insert(e,"--macos-app-activation-policy=accessory")end;if a5=="windows"or d then table.insert(e,"--input-ipc-server="..a.socket)elseif not u then local aM=a.socket..".run"local aN=io.open(aM,"w+")if aN==nil then mp.msg.error("client script write failed")return else u=true;aN:write(string.format(Y,a.socket))aN:close()subprocess({"chmod","+x",aM},true)table.insert(e,"--scripts="..aM)end else local aM=a.socket..".run"table.insert(e,"--scripts="..aM)end;table.insert(e,"--")table.insert(e,aI)p=true;s=true;subprocess(e,true,function(aO,aP)if s and(aO==false or aP.status~=0 and aP.status~=-2)then p=false;s=false;a.tone_mapping="no"mp.msg.error("mpv subprocess create failed")if not t then if a.mpv_path=="mpv"then if b["current-vo"]=="libmpv"then if a.mpv_path==a8 then a8="ImPlay"aG(aH)else if a5~="darwin"then r=true;aw(D or B,E or C)end;mp.commandv("show-text","thumbfast: ERROR! cannot create mpv subprocess",5000)mp.commandv("script-message-to","implay","show-message","thumbfast initial setup","Set mpv_path=PATH_TO_ImPlay in thumbfast config:\n"..string.gsub(mp.command_native({"expand-path","~~/script-opts/thumbfast.conf"}),"[/\\]",a6).."\nand restart ImPlay")end else mp.commandv("show-text","thumbfast: ERROR! cannot create mpv subprocess",5000)if a5=="windows"then mp.commandv("script-message-to","mpvnet","show-text","thumbfast: ERROR! install standalone mpv, see README",5000,20)mp.commandv("script-message","mpv.net","show-text","thumbfast: ERROR! install standalone mpv, see README",5000,20)end end else mp.commandv("show-text","thumbfast: ERROR! cannot create mpv subprocess",5000)mp.commandv("script-message-to","implay","show-message","thumbfast","Set mpv_path=PATH_TO_ImPlay in thumbfast config:\n"..string.gsub(mp.command_native({"expand-path","~~/script-opts/thumbfast.conf"}),"[/\\]",a6).."\nand restart ImPlay")end end elseif aO==true and(aP.status==0 or aP.status==-2)then if not t and b["current-vo"]=="libmpv"and a.mpv_path~=a8 then mp.commandv("script-message-to","implay","show-message","thumbfast initial setup","Set mpv_path=ImPlay in thumbfast config:\n"..string.gsub(mp.command_native({"expand-path","~~/script-opts/thumbfast.conf"}),"[/\\]",a6).."\nand restart ImPlay")end;t=true;s=false end end)end;local function aQ(aR)if not p then return end;if a.direct_io then local aS=h.C.CreateFileW(h.socket_wc,h.GENERIC_WRITE,0,nil,h.OPEN_EXISTING,h._createfile_pipe_flags,nil)if aS~=h.INVALID_HANDLE_VALUE then local aT=aR.."\n"h.C.SetNamedPipeHandleState(aS,h.PIPE_NOWAIT,nil,nil)h.C.WriteFile(aS,aT,#aT+1,h._lpNumberOfBytesWritten,nil)h.C.CloseHandle(aS)end;return end;local aU=aR.."\n"if a5=="windows"then if n and o+#aU>=4096 then n:close()n=nil;o=0 end;if not n then n=io.open("\\\\.\\pipe\\"..a.socket,"r+b")end elseif d then subprocess({"/usr/bin/env","sh","-c","echo '"..aR.."' | socat - "..a.socket})return elseif not n then n=io.open(a.socket,"r+")end;if n then o=n:seek("end")n:write(aU)n:flush()end end;local function aV(ax,ay,aN)if not ax or not I then return end;if w~=nil then if c then mp.command_native({"overlay-add",a.overlay_id,w,x,a.thumbnail..".bgra",0,"bgra",ax,ay,4*ax})else mp.command_native_async({"overlay-add",a.overlay_id,w,x,a.thumbnail..".bgra",0,"bgra",ax,ay,4*ax},function()end)end elseif aN then local aC,aD=mp.utils.format_json({width=ax,height=ay,x=w,y=x,socket=a.socket,thumbnail=a.thumbnail,overlay_id=a.overlay_id})mp.commandv("script-message-to",aN,"thumbfast-render",aC)end end;local function aW(aX,aY,aZ)local a_=aZ/4;local b0=aX*aY-a_;if(b["video-params"]and b["video-params"]["rotate"]or 0)%180==90 then aX,aY=aY,aX end;if b0==0 then return aX,aY else local b1=5;local b2,b3=aX,aY;if aY>aX then b2,b3=aY,aX end;for b4=b3,b3-b1,-1 do if a_%b4==0 then local b5=a_/b4;if b2-b5<b1 then if aY<aX then return b5,b4 else return b4,b5 end end end end;return nil end end;local function b6(b7,b8)if a5=="windows"then os.remove(b8)end;os.rename(b7,b8)end;local function b9(ba)if A then aQ("async seek "..A..(ba and" absolute+keyframes"or" absolute+exact"))end end;local bb=3/60;local bc=0;local bd;bd=mp.add_periodic_timer(bb,function()if bc==0 then b9(X)bc=1 else if bc==2 then if X then bd:kill()b9()end else bc=bc+1 end end end)bd:kill()local function be()if bd:is_enabled()then bc=0 else bd:resume()b9(X)bc=1 end end;local function bf()local bg=a.thumbnail..".tmp"b6(a.thumbnail,bg)local bh=mp.utils.file_info(bg)if not bh then return false end;s=false;local ax,ay=aW(B,C,bh.size)if ax then b6(bg,a.thumbnail..".bgra")D,E=ax,ay;if D and(D~=F or E~=G)then F,G=D,E;aw(D,E)end;if not I then V:kill()end;return true end;return false end;V=mp.add_periodic_timer(W,function()if bf()then aV(D,E,H)end end)V:kill()local function bi()V:kill()bd:kill()if a.quit_after_inactivity>0 then if I or aF:is_enabled()then aF:kill()end;aF:resume()end;A=nil;I=false;y=nil;z=nil;if H then return end;if c then mp.command_native({"overlay-remove",a.overlay_id})else mp.command_native_async({"overlay-remove",a.overlay_id},function()end)end end;local function bj()aF:kill()if I then aF:resume()return end;aQ("quit")p=false;D,E=nil,nil;bi()end;aF=mp.add_timeout(a.quit_after_inactivity,bj)aF:kill()local function bk(aH,bl,bm,aN)if q then return end;aH=tonumber(aH)if aH==nil then return end;if bl==""or bm==""then w,x=nil,nil else w,x=math.floor(bl+0.5),math.floor(bm+0.5)end;H=aN;if y~=w or z~=x or not I then I=true;y=w;z=x;aV(D,E,aN)end;if a.quit_after_inactivity>0 then if I or aF:is_enabled()then aF:kill()end;aF:resume()end;if aH==A then return end;A=aH;if not p then aG(aH)end;be()if not V:is_enabled()then V:resume()end end;local function bn()if not v or not b["video-out-params"]then return end;v=false;local bo=B;local bp=C;aq()local bq=ai(J)local az=b["video-rotate"]or 0;local br=bo~=B or bp~=C or O~=bq or Q%180~=az%180 or R~=S;if br then Q=az;aw(B,C)elseif T~=U and U~=0 then aw(B,C)end;if p then if br then local bs=A;aQ("quit")bi()p=false;aG(bs or mp.get_property_number("time-pos",0))V:resume()else if az~=Q then aQ("set video-rotate "..az)end;local bt=ai(K)if bt~=P then aQ("vf set "..ai(L,true))P=bt end end else P=ai(K)end;O=bq;Q=az;S=R;T=U;if not p and not q and a.spawn_first and br then aG(mp.get_property_number("time-pos",0))V:resume()end end;local function bu(a4,ap)b[a4]=ap end;local function bv(a4,ap)b[a4]=ap;v=true;if a4=="tone-mapping"then N=nil end end;local function bw(a4,ap)for bx,by in ipairs(ap)do if by.type=="video"and by.selected then b["current-tracks/video"]=by;return end end end;local function bz(bA,bB)bu(bA,bB)if bB==nil then return end;if type(bB)=="boolean"then if bA=="vid"then U=0;T=0;aw(B,C)bi()return end;bB=bB and"yes"or"no"end;if bA=="vid"then U=1 end;if not p then return end;aQ("set "..bA.." "..bB)v=true end;local function bC()bi()p=false;D,E=nil,nil;F,G=nil,nil;N=nil;A=nil;if av then av:kill()av=nil end;aq()aw(B,C)end;local function bD()aQ("quit")aE()if a5~="windows"then os.remove(a.socket)os.remove(a.socket..".run")end end;local function bE(bA,bB)X=(bB or 30)>=30 end;mp.observe_property("current-tracks/video","native",function(a4,ap)if d then mp.unobserve_property(bw)d=false end;bu(a4,ap)end)mp.observe_property("track-list","native",bw)mp.observe_property("display-hidpi-scale","native",bv)mp.observe_property("video-out-params","native",bv)mp.observe_property("video-params","native",bv)mp.observe_property("vf","native",bv)mp.observe_property("tone-mapping","native",bv)mp.observe_property("demuxer-via-network","native",bu)mp.observe_property("stream-open-filename","native",bu)mp.observe_property("macos-app-activation-policy","native",bu)mp.observe_property("current-vo","native",bu)mp.observe_property("video-rotate","native",bu)mp.observe_property("path","native",bu)mp.observe_property("vid","native",bz)mp.observe_property("edition","native",bz)mp.observe_property("duration","native",bE)mp.register_script_message("thumb",bk)mp.register_script_message("clear",bi)mp.register_event("file-loaded",bC)mp.register_event("shutdown",bD)mp.register_idle(bn)